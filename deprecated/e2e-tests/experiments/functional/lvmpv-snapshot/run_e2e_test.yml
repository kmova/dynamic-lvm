---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lvmpv-snapshot
  namespace: e2e
data:
  parameters.yml: |

---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: lvmpv-snapshot-
  namespace: e2e
spec:
  template:
    metadata:
      labels:
        test: lvmpv-snapshot
    spec:
      serviceAccountName: e2e
      restartPolicy: Never
      containers:
      - name: ansibletest
        image: openebs/lvm-localpv-e2e:ci
        imagePullPolicy: IfNotPresent
        env:
          - name: ANSIBLE_STDOUT_CALLBACK
            value: default

          - name: APP_NAMESPACE      ## Namespace in which application is deployed
            value: '' 
            
          - name: APP_PVC            ## PersistentVolumeClaim Name for the application
            value: ''

          - name: APP_LABEL          ## Label value of the application
            value: ''

          - name: LVM_OPERATOR_NAMESPACE  ## Namespace in which all the resources created by lvm driver will be present
            value: ''                     ## for e.g. lvmvolume (zv) will be in this namespace
           
          - name: SNAPSHOT_CLASS     ## Name of lvmpv volumesnapshotclass
            value: ''

          - name: SNAPSHOT_NAME      ## Snapshot will be created with this name in application namespace
            value: ''
           
          - name: ACTION             ## Use 'deprovision' for snapshot cleanup
            value: 'provision'  

          - name: DATA_PERSISTENCE   ## Give values according to the application
            value: ''                ## For `Busybox` : `busybox`  &  For `Percona` : `mysql`

        command: ["/bin/bash"]
        args: ["-c", "ansible-playbook ./e2e-tests/experiments/functional/lvmpv-snapshot/test.yml -i /etc/ansible/hosts -vv; exit 0"]

        volumeMounts:
        - name: parameters
          mountPath: /mnt/
      volumes:
        - name: parameters
          configMap:
            name: lvmpv-snapshot